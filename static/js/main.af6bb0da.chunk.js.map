{"version":3,"sources":["components/CarCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["CarCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickedcar","id","Wrapper","children","Title","Navbar","title","msg","score","topScore","maxScore","cars","lenght","App","state","currentScore","clickedCars","gameMessage","_this","includes","setState","resetGame","gameMsg","selected","push","shuffleCars","shuffledCars","shuffleArray","i","length","j","Math","floor","random","_ref","_this2","this","components_Navbar_Navbar","message","components_Wrapper","components_Title","map","car","components_CarCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"m3CAaeA,MAVf,SAAiBC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,QAAS,kBAAMT,EAAMU,WAAWV,EAAMW,KAAKP,UAAU,qBCAtFQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBCQvBE,SATA,SAAAf,GAAK,OAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,YAAOH,EAAMgB,OACbf,EAAAC,EAAAC,cAAA,YAAOH,EAAMiB,KACbhB,EAAAC,EAAAC,cAAA,sBAAcH,EAAMkB,MAApB,iBAAyClB,EAAMmB,aCD/CC,EAAWC,EAAKC,OAgGLC,6MA5FbC,MAAQ,CACNH,OACAI,aAAc,EACdN,SAAU,EACVO,YAAa,GACbC,YAAa,2BAGfjB,WAAa,SAAAC,GAQV,GAAIiB,EAAKJ,MAAME,YAAYG,SAASlB,GACnCiB,EAAKE,SAAS,CAACH,YAAY,cAC3BC,EAAKG,gBAGF,CACH,IAAMb,EAAQU,EAAKJ,MAAMC,aAAe,EAGpCP,EAAQU,EAAKJ,MAAML,UACrBS,EAAKE,SAAS,CAACX,SAASD,IAItBA,IAAUE,GACZQ,EAAKE,SAAS,CAACE,QAAS,kBACxBJ,EAAKG,cAILH,EAAKE,SAAS,CAACH,YAAa,2BAC5BC,EAAKE,SAAS,CAACG,SAASL,EAAKJ,MAAME,YAAYQ,KAAKvB,KACpDiB,EAAKE,SAAS,CAACL,aAAaP,IAC5BU,EAAKO,mBAKbA,YAAc,WACZ,IAAMC,EAAeR,EAAKS,aAAahB,GACvCO,EAAKE,SAAS,CAACT,KAAKe,OAItBC,aAAe,SAACnC,GACd,IAAK,IAAIoC,EAAIpC,EAAEqC,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADPM,EAEpB,CAAC1C,EAAEsC,GAAItC,EAAEoC,IAAvBpC,EAAEoC,GAFgCM,EAAA,GAE5B1C,EAAEsC,GAF0BI,EAAA,GAIvC,OAAO1C,KAIT6B,UAAY,WACVH,EAAKE,SAAS,CAACL,aAAa,IAC5BG,EAAKE,SAAS,CAACJ,YAAY,KAC3BE,EAAKO,uFAII,IAAAU,EAAAC,KACP,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAC4C,EAAD,CACE/B,MAAO,0CACPgC,QAASF,KAAKtB,MAAMG,YACpBT,MAAO4B,KAAKtB,MAAMC,aAClBN,SAAU2B,KAAKtB,MAAML,WAEvBlB,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,oBACCJ,KAAKtB,MAAMH,KAAK8B,IAAI,SAAAC,GAAG,OACtBnD,EAAAC,EAAAC,cAACkD,EAAD,CACE3C,WAAYmC,EAAKnC,WACjBC,GAAIyC,EAAIzC,GACR2C,IAAKF,EAAIzC,GACTL,KAAM8C,EAAI9C,KACVE,MAAO4C,EAAI5C,mBArFL+C,mBCJlBC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.af6bb0da.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CarCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.clickedcar(props.id)} className=\"clicked\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default CarCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n\n  <nav className=\"navbar d-flex justify-content-between px-5\">\n    <span>{props.title}</span>\n    <span>{props.msg}</span>  \n    <span>Score: {props.score} | Top Score: {props.topScore}</span>\n  </nav>\n);\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport CarCard from \"./components/CarCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cars from \"./cars.json\";\nimport Navbar from \"./components/Navbar\";\n\nvar maxScore = cars.lenght\n\nclass App extends Component {\n  // Setting this.state.cars to the cars json array\n  state = {\n    cars,\n    currentScore: 0,\n    topScore: 0,\n    clickedCars: [],\n    gameMessage: \"Click a car to begin!\"\n  };\n\n  clickedcar = id => {\n    // Filter this.state.cars for cars with an id not equal to the id being clickedd\n    //const cars = this.state.cars.filter(car => car.id !== id);\n    // Set this.state.cars equal to the new cars array\n    //this.setState({ cars });\n  //};\n\n     // If car has already been selected (i.e. included in the clickedCars array), then Game Over!\n     if (this.state.clickedCars.includes(id)) {\n      this.setState({gameMessage:\"You Lost!\"})\n      this.resetGame()\n    }\n    // Else, increment the score\n    else {\n      const score = this.state.currentScore + 1\n\n      // Update topScore if currentScore is greater than current topScore\n      if (score > this.state.topScore) {\n        this.setState({topScore:score})\n      }\n\n      // If selected all cars without repeating, then you win!\n      if (score === maxScore) {\n        this.setState({gameMsg: \"You have Won!\"})\n        this.resetGame()\n      }\n      // Add current car id to clickedCars array, update score, shuffle cars and continue playing\n      else {\n        this.setState({gameMessage: \"You clicked a new car!\"})\n        this.setState({selected:this.state.clickedCars.push(id)})\n        this.setState({currentScore:score})\n        this.shuffleCars()\n      }\n    }\n  }\n\nshuffleCars = () => {\n  const shuffledCars = this.shuffleArray(cars)\n  this.setState({cars:shuffledCars})\n}\n\n// Shuffles array in place. ES6 version\nshuffleArray = (a) => {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n// Resets the game parameters, shuffle images\nresetGame = () => {\n  this.setState({currentScore:0})\n  this.setState({clickedCars:[]})\n  this.shuffleCars()\n}\n\n  // Map over this.state.cars and render a CarCard component for each car object\n  render() {\n    return (\n      <div className=\"App\">\n      <Navbar\n        title={\"Try to not click on the same car twice!\"}\n        message={this.state.gameMessage}\n        score={this.state.currentScore}\n        topScore={this.state.topScore}\n      />\n      <Wrapper>\n        <Title>Clicky Cars</Title>\n        {this.state.cars.map(car => (\n          <CarCard\n            clickedcar={this.clickedcar}\n            id={car.id}\n            key={car.id}\n            name={car.name}\n            image={car.image}\n          />\n        ))}\n      </Wrapper>\n     </div>\n    );\n  }\n}\n\nexport default App;\n\n//I based my solution from the following github repository: https://github.com/vdelariva \n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}